# Tasks Plan - please see below for items you can work on & mark their status as you start/finish them

v Support syntax highlighted editing for Tasks import/export format using TextMate [JH2] <SG> @Done

Design/Planning @Done
- Review comparable applications for ideas: Mac Things/TaskPaper, Jira [SG] <MB> @Done
- Define Personas (Roles) & User Stories/Use Cases [SG] <SE> @Done
| Manager - add/edit/delete Users/Projects/Tasks, allocate Tasks to Projects, assign to/load balance Tasks across Developers, view/update Project/Task status
| Developer - add/edit/delete Tasks, view Tasks & update effort (estimates=>actual)/status, reassign Tasks to other Developers or reallocate to other Projects, add Task Release Notes in description field
| Tester - view Tasks of type Feature/Bug that are Done (read Release Notes in description field), validate Tasks (mark as Passed | Failed), submit Bugs as Tasks with details to reproduce problem in description field
| Guest - view Projects, add/edit unallocated Tasks (no delete permissions)
^ Create GUI Wireframes using Balsamiq [SG] @Done
^ Create GUI Statecharts using Omnigraffle [SG] <SE> @Done
- Create GUI Mockups using Photoshop [MG] <SG> @Done
^ Define core Models/JSON [SG] <SE> @Done
- Define Tasks TXT file format for data import/export [SG] <SE> @Done
- Design REST API supporting CRUD operations [SG] <SE> @Done
- Design Tasks Server & evaluate persistence frameworks [SE] <SG> @Done
- Design RBAC (role-based access control) to be implemented on GUI and Server <JH2> [SG] @Done
| Any authenticated user can read Projects/Tasks and update their own User attributes (except role)
| Everyone can create/update Users (except Role attribute); Only Managers can update User Role and delete Users
| Only Managers can create/update/delete Projects
| Managers/Developers/Testers can create/update/delete Tasks
| Guests can only create/update unallocated Tasks they submitted & update Task descriptions

General Infrastructure @Active
^ Develop Model and Fixtures (hardcoded & generated) [SG] <SE> @Done
- Develop States/Actions corresponding to GUI Statecharts [SG] <SE> @Done
- Support minimum resolution of 1024x768 [SG] @Done $Feature %Passed
- Support decimal numbers for Project TimeLeft and Task effort in units of 'd' or 'h' [SG] @Done %Passed $Feature
^ Have Tasks refer to Project they are allocated to and make projects Store queries [SE] <SG> @Done %Passed
- Handle persistence consistently (nothing should save unless user hits "Save") [SE] <SG> @Done %Passed
- Implement GUI-based RBAC (role-based access control) [SG] $Feature @Done %Passed
- Add an indicator (dot) before Projects/Tasks/Users that were created or updated within the last day <SE> [SG] $Feature @Done %Passed
- Display record created/updated time at the bottom of popup editors [SG] $Feature @Done %Passed
- Analyze/optimize calls to assignments controller and custom view render methods <BB> [SG] @Active
v Make buttons depressable to provide feedback when using them [SG] $Feature @Done %Passed
- Support direct access to Projects or Tasks using SproutCore routes [SG] $Feature @Done %Passed
- Destroy authentication token when User logs out [SG] <JH2> $Feature @Active
- Implement/benchmark JSONP-based data loading for performance speedup (XHRs faster) [SG] <SE> @Done
^ Optimize data loading to use single Server call for all entities <SE> [SG] @Done %Passed
^ Optimize startup data load using HTML5 cascading data source <SE> [SG] @Active
- Out of Scope: Add support for attachments in record descriptions $Feature
| Upload attachment somewhere and insert URL to it in record description

Project Manager GUI @Active
^ Add Master/Detail Explorer view with click selection of Projects showing corresponding Tasks [JH2] <SG> @Done $Feature %Passed
^ Add Project countDown support to autmatically decrement days based on timeLeft and current time <JH2> [SG] $Feature @Done %Passed
^ Show Project name & countDown (if specified) on far right [SG] <JH2> @Done $Feature %Passed
- Use icon to indicate if Project has any Tasks or not [SG] @Done $Feature %Passed
- Support alpha sorting of Projects [SG] <JH2> @Done %Passed $Feature
- Allow multi-project modification of Status [SG] $Feature @Done %Passed
v Add hover over tooltip for Projects to show how many Tasks they contain [SG] @Done $Feature %Passed
^ Add double-click in-cell editing and parse/extract optional parameters if specified [SG] @Done $Feature %Passed
| Check via Inline Editor Delegate
^ Add buttons to add/delete Projects [SG] @Done $Feature %Passed
- Add warning Alert box about deleting Project with Tasks [SG] @Done $Feature %Passed
- Disallow Project names or User loginNames that are already in use or reserved [SG] $Feature @Active
| Project name cannot be duplicated or a system project name
| User login name cannot be duplicated or reserved name "none"
v Add summary in projects bottom showing number of Projects & number of Tasks for selected projects [SG] <MB> @Done $Feature %Passed
v Enable/disable "Delete Project" button based on having a selected project [SG] @Done %Passed $Feature
v Disable "Add Task" button when no project is selected [SG] <BB> @Done %Passed $Feature
- Select "All Tasks" project at startup [SG] @Done %Passed $Feature
^ Add "All/Unallocated/Unassigned Tasks" system projects  [SG] <SE> $Feature @Done %Passed
- Disallow system projects from being deleted [SG] @Done $Feature %Passed
^ Allow multi-task drag-and-drop reallocation to other projects [BB] <SG> @Done $Feature %Passed
^ Add popup viewer/editor for Project timeLeft/description [SG] $Feature @Done %Passed
v Add Project context menu with options: Add, Duplicate, Delete [SG] $Feature @Done %Passed
- Add "Statistics..." button/popup to show percent breakdown of displayed Tasks by attributes (HTML) [SG] $Feature @Done %Passed
- Support alternate graphical view (pie charts, bar graphs) for Statistics using Sai [SG] <EG> $Feature @Active

Task Manager GUI @Active
^ Group Tasks by User and display Task id, summary, and effort (if specified) on far right [SG] <JH2> @Done $Feature %Passed
^ Support automatic sorting of Tasks by Status, Validation, Priority, Type, and Name or "index" (if name starts with a number) [SG] <SG> @Done $Feature %Passed
- Allow Tasks under an assignee to be hidden/disclosed [SG] <JH2> @Done $Feature %Passed
- Show Task Type via different icons [SG] <JH2> @Done $Feature %Passed
- Show Task Priority (font style), Status (font color), Validation (background color) [SG] <MB> @Done $Feature %Passed
- Add Task "Type/Priority/Status/Validation" select buttons in tasks popup editor [SG] @Done $Feature %Passed
v Enable Task Validation editing only when in Done status [SG] <JH2> $Feature @Done %Passed
- Allow multi-task modification of Type/Status/Priority/Validation [SG] $Feature @Done %Passed
^ Add Task search filter (by #IDs or name) & corresponding delete button in top bar: support type-ahead searching <JH2> [SG] @Done %Passed $Feature
^ Allow Task attribute filtering by Type, Priority, Status, and Validation fields via a top bar button/sheet pane [SG] $Feature @Done %Passed
- Add commonly-used "QuickFilters": Troubled, Unfinished, Unvalidated, Completed, Showstoppers, All [SG] $Feature @Done %Passed
- Allow filtering of Tasks that were recently updated or have effort specified [SG] $Feature @Done %Passed
- Allow filtering of Tasks that were created or updated within a specified timeframe [SG] $Feature
- Indicate whether there is a Task attribute filter via cancel icon [SG] $Feature @Done %Passed
- Indicate whether there are any risky items under an assignee using a red flag in assignee grouping bar [SG] $Feature @Done %Passed
v Enable/disable "Delete Task" button based on having a selected Task [SG] @Done %Passed $Feature
^ Add double-click in-cell editing and parse/extract optional parameters if specified [SG] @Done $Feature %Passed
^ Add buttons to add/delete Tasks [SG] <SE> @Done %Passed $Feature
| Logged in user is default Submitter, Assignee is either set to the same as selected Task (if one) or to logged in user
| Copy over Project/Type/Priority attributes of first selected Task to new Task
- Clear Task Validation if status is changed from Done, disallow entry of Passed/Failed when not Done [SG] <MB> $Feature @Done %Passed
^ Show Done/Left effort subtotals (exclude incomplete Low priority Tasks) on far right for load balancing [SG] @Done $Feature %Passed
- Append "?" for range-based subtotals including Ttasks with unspecified Efforts [SG] @Done $Feature %Passed
- Color code assignee non loading in gray, under loading in green, proper loading in blue, and over loading in red [SG] @Done $Feature %Passed
v Add hover over tooltip for assignees to show how many Tasks they have and to explain loading color codes [SG] @Done $Feature %Passed
^ Allow multi-task drag-and-drop reassignment to other Assignees [BB] <SG>  @Done $Feature %Passed
^ Add popup viewer/editor for Task Submitter, Assignee, Effort, Project, and Description [JH2] <SG> $Feature @Done %Passed
- Limit Assignees to non-Guest users in Task popup editor [SG] $Feature @Done %Passed
- Support multi-task ID/Name copy to clipboard from top bar [SG] <JH2> $Feature @Done %Passed
v Add Task context menu with options: Add, Duplicate, Delete; All Task Attributes; Copy ID/Name, Copy Link [SG] $Feature @Done %Passed
^ Add ability to "Watch" Tasks and get Email Notifications after Task changes [SG] <JH2> $Feature @Done %Passed
- Indicate watched Tasks by underlining their IDs [SG] $Feature @Done %Passed
- Add ability to view/add Comments on Tasks [SG] <JH2> $Feature @Active
- Allow "Find & Replace" within Task names  (operating only on items in Tasks Detail view)[SG] $Feature
- Allow Task names to embed metacharacters by enclosing in quotes [SG] $Feature
- Support emails including Task details to other users via Server [SG] $Feature
- Out of Scope: Add support for nested Tasks and Task tagging $Feature
| Use "Clustering" approach described in Help instead
- Out of Scope: Add support for managing inter-Task dependencies/linking $Feature
| You can reference #IDs of upstream Tasks in the Description field instead
- Out of Scope: Add support for preserving original Task estimates/partial time logging $Feature
| Use "Chunk Up Work" best practice described in Help instead

User Manager GUI @Active
^ Add login screen to identify user who logs in (and handle login failures properly) [SG] <SE> @Done %Passed $Feature
- Add password to login, signup, and User Manager screens (save in encrypted format) [SG] <JH2> $Feature @Done %Passed
- Allow new guests to sign up from login screen and log them in immediately after [JH2] <SG> @Done %Passed $Feature
^ Add assignee/submitter filtering (space or comma separators, "none" for unassigned) & corresponding delete button [SG] <JH2> @Done $Feature %Passed
- Allow assignee filtering by matching any part of login or full name [SG] $Feature @Done %Passed
- Set assignee selection filter to logged in user if they are a Developer [SG] @Done $Feature %Passed
^ Add Settings button/popup embedding User Manager with buttons to add/delete users at bottom [SG] <JH2> @Done %Passed $Feature
| Copy over Role attribute of first selected User to new User
v Enable/disable "Delete User" button based on having a selected user [SG] @Done %Passed $Feature
- Show number of displayed/selected users at the bottom of User Manager panel [SG] $Feature @Done %Passed
- Reset Task Assignee/Submitter after user deletion <SE> [SG] $Feature @Done %Passed
^ Allow multi-user drag-and-drop role change in User Manager [SG] @Done $Feature %Passed
^ Add User type-ahead search filter (case insensitive name/loginName match) [SG] @Done %Passed $Feature
- Provide ability to mark Users as inactive <SG> [SG] $Feature
| Inactive Users cannot be made Assignees/Submitters
- Out of Scope: Add support for "Teams" (a user can belong to a team, a team can have a lead) $Feature
| Create separate projects for different teams to keep their tasks/deadlines separate instead

Application Manager GUI @Active
- Add Tasks logo to top bar and display program version as a badge [SG] $Feature @Done %Passed
- Add welcome message showing logged in user/role with hover over tooltip showing time of login [SG] @Done $Feature %Passed
- Make welcome message clickable to show current user's tasks by setting search filter [SG] @Done $Feature %Passed
- Add Server data loading message in bottom bar during startup [SG] $Feature @Done %Passed
- Show number of selected Projects/Tasks and displayed Assignees/Tasks in the bottom bar [SG] <MB> @Done $Feature %Passed
- Add "Save" button in bottom bar, note time of last save in bottom bar [SG] <BB> @Done $Feature %Passed
- Add "AutoSave" enable/disable capability via actions menu [SG] <BB> @Done $Feature %Passed
- Enable/disable "Save" button based on data modification [EO] <SG> $Feature @Done %Passed
- Add "Refresh" button to synchronize GUI with latest data from Server [SG] <SE> $Feature @Done %Passed
- Add "Import" menu item in actions menu with associated pop up panel [SG] <BB> @Done $Feature %Passed
- Don't create a Project if it already exists during Import [SG] @Done $Feature %Passed
- Allow option to automatically create new users for unknown assignees/submitters found during importing [SG] @Done $Feature %Passed
- Turn off notifications during importing [SG] @Done $Feature %Passed
- Add "Export" menu items in actions menu with associated pop up panels, allowing user to choose between Text/HTML formats [SG] @Done $Feature %Passed
| When on "All Tasks" project with no filters on all Project data is exported, otherwise only displayed data is exported
- Add "Exort to HTML" capability for printable & human-readable version (for baselining Tasks for a release) [SG] $Feature @Done %Passed
- Add online "Help" menu item in actions menu and popup help window [SG] @Done %Passed $Feature
v Add online training video using QuickTime [SG] $Feature @Done
| http://www.youtube.com/watch?v=6egjJw_RS1g
- Add onscreen help (on panel fields that are complex and on blank workspace to assist new users) <MG> [SG] $Feature @Done %Passed
- Add "Logout" menu item in actions menu (confirm before exiting, reload data/clear all filters) [SG] <JH2> @Done $Feature %Passed
- Prompt user to save changes (if any) before logging out [SG] <SE> $Feature @Done %Passed
| See demo.sproutcore.com/user_defaults and lookup SproutCore blog for Charles' posting on this topic
- Add Team display mode (vs. Tasks) to show everyone at a glance, clicking on Assignee shows their Tasks [SG] $Feature @Done %Passed
v Add hotkeys for common operations (like Add/Duplcate Tasks and Save) [EG] <SG> $Feature @Done %Passed
| Turned these off for now since these are conflicting with browser shortcuts
- Provide tab in Settings popup panel to manage user preferences [SG] $Feature
| Auto save
| Email notifications
| Percent or Threshold (in days) for Assignee loading determination
- Support Application settings/state persistence from last login saved using HTML5 storage [SG] <MB> $Feature
- Support offline mode with synchronization after network reconnection using Hub.js [SG] <EG> $Feature
- Support undo/redo using Hub.js [SG] <EG> $Feature

Server/Tools @Active
^ Build persistence Server using Persevere [SE] <SG> @Done %Passed
- Create command-line scripts to start/stop Persevere Server and to create users <SG> [SE] $Feature @Done %Passed
- Create tool to parse CSV files and create Tasks import format <SG> [SE] $Feature @Done
^ Build persistence Server using Google App Engine [JH2] <SG> @Done %Passed
- Implement Server-based user authentication using Python on Google App Engine [JH2] <SG> $Feature @Done %Passed
- Implement Server-based RBAC (role-based access control) using Python on Google App Engine <SG> [JH2] $Feature @Done %Passed
^ Send Email Notifications on noteworthy changes using Python on Google App Engine [SG] <JH2> $Feature @Done %Passed
| Add email notifications enable/disable capability via actions menu
| Notify Submitter/Assignee when Task is created/updated by someone other than them
| Don’t send Submitter or Assignee notification if their Email address is unspecified
| Indicate Task ID, create/update action, and user who triggered notifications in Subject: line
| For Task updates, indicate old and new values of attributes
- Add link to Task in email notification (should not require authentication if user is signed in) <JH2> [SG] $Feature
- Handle network or Server unavailability gracefully and provide appropriate diagnostics to the user [SG] <SE> @Done %Passed
- Implement GUI-side data validation checks and corresponding user feedback [SG] <JL>
^ Convert Tasks into a Jira plugin [JH2] <SG> $Feature
- Implement bridge to "github issues" from Google App Engine [JH2] <SG> $Feature @Active

Styling/Hardening @Active
^ Style via CSS, embed catchy/sprited images [MG] <SG> $Feature @Done %Passed
^ Re-style to match Greenhouse look & feel [SG] $Feature <MG> @Done
- Run Chance to optimize loading of final set of split-up icons [JH2] <SG> @Active
- Perform I18N and L10N (test with reversed strings) [SG] <JH2> @Done %Passed
- Collect/address feedback from Alpha/Beta users and targeted usability tests <MG> [SG] @Done %Passed
^ Perform smoke test of key functionality [SG] @Done
| Login, Guest Signup, Logout
| All/Unallocated/Unallocated Tasks system projects, Tasks/Team display modes
| Project/Task/User add/duplicate/delete via buttons/context menus
| Project/Task modifications via inline and popup editors
| Project status, Task reassignment/reallocation, and User role change via drag-and-drop
| Task filtering via QuickFilters/attributes and assignees/submitters/IDs/name
| User modifications via User Manager, searching for users
| Auto & manual Save, Refresh
| Import/Export (Text & HTML)
| Popup online Help, Statistics
| Email Notifications, Task watching
- Develop comprehensive Model/View unit tests [SG] <BB> @Active
- Develop comprehensive automated test scripts using Lebowski/Selenium [SG] <MR> @Active
- Refactor code to "root controller pattern" and new SproutCore statecharts [SG] <MC> @Active

Installation/Deployment @Active
- Support customizable (via Buildfile) "Installation" logo and title (shown in Browser/tab title) [SG] @Done $Feature %Passed
- Support customizable Guest signup capability via "Login" screen (useful for open-source projects) [SG] @Done $Feature %Passed
- Support customizable "Software" vs. "Todo" mode (in latter case, Task Type & Validation are not available via GUI) [SG] $Feature @Done %Passed
- Support customizable default "AutoSave" and "Notifications" settings (can be overridden by User via GUI) [SG] $Feature @Done %Passed
- Deploy publicly-accessible instances using Google App Engine/Python [JH2] <SG> @Done %Passed
- Port GUI to Firefox, Internet Explorer, Safari, and Chrome [SG] @Done %Passed
v Provide SproutCore doctool-style comments [SG] <SE>

Touch Interfaces
- Develop iPad client with swiveling Master/Detail view <JH2> [SG] $Feature @Done
- Develop iPhone client <MB> [SG] $Feature