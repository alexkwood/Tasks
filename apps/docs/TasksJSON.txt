# Tasks Application: JSON Definitions
# appended asterisk indicates required field, angle brackets enclose type
# parentheses enclose valid values, _Value_ indicates default

##################################################
Record Set:
{
  result: {
    users: <Users JSON>,
    projects: <Projects JSON>,
    tasks: <Tasks JSON>,
    watches: <Watches JSON>,
    comments: <Comments JSON>
  }
}

##################################################
Project:
{
	id*: <Number>, # primary key
	createdAt: time when record was created (in milliseconds since the Unix Epoch)
	updatedAt: time when record was last updated (in milliseconds since the Unix Epoch)
	name*: <String>, # title
	description: <String>, # multi-line additional information such as project start/end dates, goals, et al
	timeLeft: <Number>, # amount of time left in days
	activatedAt: <String>, # date project was activated in format'%m/%d/%Y'
	developmentStatus: Enum<String> ("_Planned_" | "Active" | "Done"), # development status
}

##################################################
Task:
{
	id*: <Number>, # primary key
	createdAt: time when record was created (in milliseconds since the Unix Epoch)
	updatedAt: time when record was last updated (in milliseconds since the Unix Epoch)
	name*: <String>, # one-line summary
	description: <String>, # multi-line additional information such as Feature details, Bug reproduction steps, or Release Notes
	projectId: <Number> # refers to project task is allocated to
	priority: Enum<String> ("High" | "_Medium_" | "Low"), # High ones must be completed, Low ones not included in effort subtotals
	effort: <String> # effort estimate => actual, in days
	submitterId: <String>, # loginName of User who submitted this Task
	assigneeId: <String> # loginName of User to whom this Task is assigned
	type: Enum<String>, ("Feature" | "Bug" | "_Other_") # kind of Task to support testing workflow
	developmentStatus: Enum<String> ("_Planned_" | "Active" | "Done" | "Risky"), # development status
	validation: Enum<String> ("_Untested_" | "Passed" | "Failed"), # validation status
}

##################################################
User:
{
	id*: <Number>, # primary key
	createdAt: time when record was created (in milliseconds since the Unix Epoch)
	updatedAt: time when record was last updated (in milliseconds since the Unix Epoch)
	name*: <String>, # full name
	loginName*: <String>, # login name
	role*: Enum<String>, ("Manager" | "_Developer_" | "Tester") # to allow RBAC
	email: <String>, # email address used for notifications
	password: <String>, # encrypted password used for authentication
	preferences: { key: value }, # preferences stored as key/value pairs
	authToken: <String> # authentication token from logging into a server
}

##################################################
Watch:
{
	id*: <Number>, # primary key
	createdAt: time when record was created (in milliseconds since the Unix Epoch)
	updatedAt: time when record was last updated (in milliseconds since the Unix Epoch)
	taskId: <Number> # refers to task being watched
	userId: <Number> # refers to user who is watching
}

##################################################
Comment:
{
	id*: <Number>, # primary key
	createdAt: time when record was created (in milliseconds since the Unix Epoch)
	updatedAt: time when record was last updated (in milliseconds since the Unix Epoch)
	description: <String>, # multi-line comment
	taskId: <Number> # refers to task being commented on
	userId: <Number> # refers to user who is commenting
}